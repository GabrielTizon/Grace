
2025-06-02 18:11:30 - Iniciando o processo de deployment...
2025-06-02 18:11:30 - Parando e removendo contêineres existentes (se houver)...
2025-06-02 18:11:30 - Construindo as imagens Docker...
Compose can now delegate builds to bake for better performance.
 To do so, set COMPOSE_BAKE=true.
#0 building with "default" instance using docker driver

#1 [receive-send-api internal] load build definition from Dockerfile
#1 transferring dockerfile: 283B done
#1 DONE 0.1s

#2 [record-api internal] load build definition from Dockerfile
#2 transferring dockerfile: 200B done
#2 DONE 0.1s

#3 [record-api internal] load metadata for docker.io/library/python:3.12-slim
#3 ...

#4 [auth-api internal] load build definition from Dockerfile
#4 transferring dockerfile: 759B done
#4 DONE 0.1s

#5 [auth-api internal] load metadata for docker.io/library/php:8.3-fpm
#5 DONE 1.0s

#6 [receive-send-api internal] load metadata for docker.io/library/node:20.17
#6 ...

#7 [auth-api internal] load .dockerignore
#7 transferring context: 2B done
#7 DONE 0.0s

#8 [auth-api  1/10] FROM docker.io/library/php:8.3-fpm@sha256:6c4391a739ec0a07c57f4f3af374c3262797f281207363bcf44c289bb4d7caa0
#8 DONE 0.0s

#9 [auth-api internal] load build context
#9 transferring context: 346B done
#9 DONE 0.0s

#10 [auth-api  3/10] WORKDIR /app
#10 CACHED

#11 [auth-api  5/10] RUN composer install --prefer-dist --no-interaction --optimize-autoloader --verbose || { echo "Composer install failed"; exit 1; }
#11 CACHED

#12 [auth-api  9/10] COPY entrypoint.sh /entrypoint.sh
#12 CACHED

#13 [auth-api  7/10] RUN chown -R www-data:www-data /app
#13 CACHED

#14 [auth-api  8/10] COPY php-fpm.conf /usr/local/etc/php-fpm.conf
#14 CACHED

#15 [auth-api  2/10] RUN apt-get update && apt-get install -y     libpq-dev     git     libzip-dev     postgresql-client     && docker-php-ext-install pdo pdo_pgsql zip     && pecl install redis     && docker-php-ext-enable redis     && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
#15 CACHED

#16 [auth-api  4/10] COPY composer.json .
#16 CACHED

#17 [auth-api  6/10] COPY src/ .
#17 CACHED

#18 [auth-api 10/10] RUN chmod +x /entrypoint.sh
#18 CACHED

#6 [receive-send-api internal] load metadata for docker.io/library/node:20.17
#6 ...

#3 [record-api internal] load metadata for docker.io/library/python:3.12-slim
#3 DONE 1.3s

#19 [auth-api] exporting to image
#19 exporting layers done
#19 writing image sha256:d0d8fd06b0f9c1d054913cf79bb1bedcba92e26dbae9a8091e1db2bae694b19f done
#19 naming to docker.io/library/grace-auth-api done
#19 DONE 0.0s

#20 [record-api internal] load .dockerignore
#20 transferring context: 2B done
#20 DONE 0.1s

#21 [record-api 1/5] FROM docker.io/library/python:3.12-slim@sha256:fd95fa221297a88e1cf49c55ec1828edd7c5a428187e67b5d1805692d11588db
#21 DONE 0.0s

#6 [receive-send-api internal] load metadata for docker.io/library/node:20.17
#6 DONE 1.5s

#22 [record-api internal] load build context
#22 transferring context: 330B done
#22 DONE 0.1s

#23 [receive-send-api internal] load .dockerignore
#23 transferring context: 2B done
#23 DONE 0.1s

#24 [receive-send-api 1/5] FROM docker.io/library/node:20.17@sha256:db5dd2f30cb82a8bdbd16acd4a8f3f2789f5b24f6ce43f98aa041be848c82e45
#24 DONE 0.0s

#25 [record-api 4/5] COPY requirements.txt .
#25 CACHED

#26 [record-api 2/5] WORKDIR /app
#26 CACHED

#27 [record-api 3/5] COPY src/ .
#27 CACHED

#28 [record-api 5/5] RUN pip install --no-cache-dir -r requirements.txt
#28 CACHED

#29 [receive-send-api internal] load build context
#29 transferring context: 171B done
#29 DONE 0.1s

#30 [auth-api] resolving provenance for metadata file
#30 DONE 0.0s

#31 [record-api] exporting to image
#31 exporting layers done
#31 writing image sha256:b1216cea2cd2a03a395d1b9bb71f524872929bff1544010bf35f5feb8b5f0b79 done
#31 naming to docker.io/library/grace-record-api done
#31 DONE 0.1s

#32 [receive-send-api 2/5] WORKDIR /app
#32 CACHED

#33 [receive-send-api 3/5] COPY src/ .
#33 CACHED

#34 [receive-send-api 4/5] COPY package.json .
#34 CACHED

#35 [receive-send-api 5/5] RUN npm install
#35 CACHED

#36 [receive-send-api] exporting to image
#36 exporting layers done
#36 writing image sha256:34da27935eb41fda5a9a1722c297f7bad79b56d710f76a1e0da7bbc2c6a01ad5 done
#36 naming to docker.io/library/grace-receive-send-api done
#36 DONE 0.0s

#37 [record-api] resolving provenance for metadata file
#37 DONE 0.0s

#38 [receive-send-api] resolving provenance for metadata file
#38 DONE 0.0s
2025-06-02 18:11:32 - Build das imagens concluído com sucesso.
2025-06-02 18:11:32 - Iniciando os contêineres Docker...
2025-06-02 18:11:44 - Contêineres iniciados com sucesso.
2025-06-02 18:11:44 - Executando verificações de saúde dos serviços...
2025-06-02 18:11:44 - Verificando saúde do serviço: nginx-auth...
2025-06-02 18:11:44 - Serviço nginx-auth ainda não está saudável (Status: starting). Tentando novamente em 2 segundos... (1/30)
2025-06-02 18:11:46 - Serviço nginx-auth ainda não está saudável (Status: starting). Tentando novamente em 2 segundos... (2/30)
2025-06-02 18:11:48 - Serviço nginx-auth ainda não está saudável (Status: starting). Tentando novamente em 2 segundos... (3/30)
2025-06-02 18:11:50 - Serviço nginx-auth ainda não está saudável (Status: starting). Tentando novamente em 2 segundos... (4/30)
2025-06-02 18:11:52 - Serviço nginx-auth ainda não está saudável (Status: starting). Tentando novamente em 2 segundos... (5/30)
2025-06-02 18:11:54 - Serviço nginx-auth ainda não está saudável (Status: starting). Tentando novamente em 2 segundos... (6/30)
2025-06-02 18:11:56 - Serviço nginx-auth ainda não está saudável (Status: starting). Tentando novamente em 2 segundos... (7/30)
2025-06-02 18:11:58 - Serviço nginx-auth ainda não está saudável (Status: starting). Tentando novamente em 2 segundos... (8/30)
2025-06-02 18:12:00 - Serviço nginx-auth ainda não está saudável (Status: starting). Tentando novamente em 2 segundos... (9/30)
2025-06-02 18:12:02 - Serviço nginx-auth ainda não está saudável (Status: starting). Tentando novamente em 2 segundos... (10/30)
